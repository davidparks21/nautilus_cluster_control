#!/usr/bin/env bash

#
# Documentation at: https://github.com/davidparks21/nautilus_cluster_control
# This is a shell script for using the Nautilus cluster at https://nautilus.optiputer.net
#

# TODOs / Issues:
#   - `navolume --anyparam` will cause the command line parsing to go into an infinite loop, fix this

#
# Global script defaults
#
VOLUME_NAME=my_volume
VOLUME_SIZE=20000000000     # 20GB
SRC_DIR=
DEST_DIR=

#
# Functions below implement the various components of the script
#
navolume_create(){
    echo "TODO - Create a new volume"
    echo "ARGS: VOLUME_NAME=${VOLUME_NAME} VOLUME_SIZE=${VOLUME_SIZE} SRC_DIR=${SRC_DIR} DEST_DIR=${DEST_DIR}"
}
navolume_sync(){
    echo "TODO - Sync files from source to dest"
    echo "ARGS: VOLUME_NAME=${VOLUME_NAME} VOLUME_SIZE=${VOLUME_SIZE} SRC_DIR=${SRC_DIR} DEST_DIR=${DEST_DIR}"
}
navolume_list(){
    echo "TODO - List volumes"
    echo "ARGS: VOLUME_NAME=${VOLUME_NAME} VOLUME_SIZE=${VOLUME_SIZE} SRC_DIR=${SRC_DIR} DEST_DIR=${DEST_DIR}"
}
navolume_delete(){
    echo "TODO - Delete volume"
    echo "ARGS: VOLUME_NAME=${VOLUME_NAME} VOLUME_SIZE=${VOLUME_SIZE} SRC_DIR=${SRC_DIR} DEST_DIR=${DEST_DIR}"
}

#
# Command line parsing
#
PARAMS=""

dehumanise() {
    # https://stackoverflow.com/questions/26621647
    for v in "${@:-$(</dev/stdin)}"; do
        echo $v | awk \
            'BEGIN{IGNORECASE = 1}
            function printpower(n,b,p) {printf "%u\n", n*b^p; next}
            /[0-9]$/{print $1;next};
            /K(iB)?$/{printpower($1,  2, 10)};
            /M(iB)?$/{printpower($1,  2, 20)};
            /G(iB)?$/{printpower($1,  2, 30)};
            /T(iB)?$/{printpower($1,  2, 40)};
            /KB$/{    printpower($1, 10,  3)};
            /MB$/{    printpower($1, 10,  6)};
            /GB$/{    printpower($1, 10,  9)};
            /TB$/{    printpower($1, 10, 12)}'
    done
}

while (( "$#" )); do
    case "${1,,}" in
        create)
            RUN_COMMAND=navolume_create
            VOLUME_NAME=$(dehumanise $2)
            VOLUME_SIZE=$(dehumanise $3)
            shift 3
            ;;
        sync)
            RUN_COMMAND=navolume_sync
            VOLUME_NAME=$2
            SRC_DIR=$3
            DEST_DIR=$4
            shift 4
            ;;
        list)
            RUN_COMMAND=navolume_list
            shift 1
            ;;
        delete)
            RUN_COMMAND=navolume_delete
            VOLUME_NAME=$2
            shift 2
            ;;
        *) # unsupported option
            echo "Error: Unsupported option $1" >&2
            exit 1
            ;;
    esac
done

# set positional arguments in their proper place
eval set -- "$PARAMS"

$RUN_COMMAND
